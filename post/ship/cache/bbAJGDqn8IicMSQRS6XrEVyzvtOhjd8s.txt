const axios = require('axios');

module.exports.config = {
	name: "sim",
	version: "1.0.0",
	hasPermssion: 0,
	credits: "NTKhang",
	description: "Chat với bot simsimi",
	commandCategory: "Chatbot",
	usages: "",
	cooldowns: 5
};

module.exports.run = async function ({ api, event, args }) {
	switch (args[0]) {
		case 'on':
		case 'off':
		case undefined: {
			if (!await global.modelAntiSt.findOne({ where: { threadID: event.threadID } }))
				await global.modelAntiSt.create({
					threadID: event.threadID,
					data: {}
				});

			const data = (await global.modelAntiSt.findOne({
				where: {
					threadID: event.threadID
				}
			})).data || {};

			data.simsimi = args[0] == undefined ? !data.simsimi : args[0] == 'on';
			await global.modelAntiSt.findOneAndUpdate({
				threadID: event.threadID
			}, {
				data
			});
			return api.sendMessage(`Đã ${data.simsimi ? 'bật' : 'tắt'} simsimi!`, event.threadID, event.messageID);
		}
		case 'teach': {
			const prefix = global.data.threadData.get(event.threadID)?.PREFIX || global.config.PREFIX;
			const content = event.body.slice(event.body.indexOf(args[0]) + args[0].length + 1, event.body.length);
			console.log(content);
			// sim teach <question> => <answer>
			// sim teach <question> | <answer>
			const cutter = content.indexOf('=>') != -1 ? '=>' : '|';
			const cutted = content.split(cutter);
			const question = cutted[0].trim();
			const answer = cutted.slice(1).join(cutter).trim();
			if (!question || !answer) return api.sendMessage(`Sai cú pháp, hãy thử lại!\n\n${prefix}sim teach <question> => <answer>\nhoặc\n${prefix}sim teach <question> | <answer>`, event.threadID, event.messageID);
			console.log(question, answer);
			const response = await axios({
				url: 'https://API-ThanhAli.thanhali.repl.co/sim',
				params: {
					type: 'teach',
					apikey: 'ThanhAliVip_1234567890',
					ask: question,
					ans: answer
				}
			});

			const { data } = response;
			if (data.error)
				return api.sendMessage('Đã có lỗi xảy ra, vui lòng thử lại sau!\n' + data.error, event.threadID, event.messageID);
			return api.sendMessage('Đã dạy simsimi thành công!', event.threadID, event.messageID);
		}
		default: {
			const ask = args.join(' ');
			if (!ask) return api.sendMessage('Bạn chưa nhập nội dung cần hỏi!', event.threadID, event.messageID);
			const response = await getAnswer(ask);
			if (response.data.error)
				return api.sendMessage('Đã có lỗi xảy ra, vui lòng thử lại sau!\n' + response.data.error, event.threadID, event.messageID);
			return api.sendMessage(response.data.answer, event.threadID, event.messageID);
		}
	}
};

module.exports.handleEvent = async function ({ api, event }) {
	const prefix = global.data.threadData.get(event.threadID)?.PREFIX || global.config.PREFIX;
	const data = (await global.modelAntiSt.findOne({
		where: {
			threadID: event.threadID
		}
	}))?.data || {};
	if (!data.simsimi)
		return;
	if (event.senderID == api.getCurrentUserID() || event.body.indexOf(prefix + 'sim') == 0)
		return;
	const response = await getAnswer(event.body); if (response.data.error)
		return api.sendMessage('Đã có lỗi xảy ra, vui lòng thử lại sau!\n' + response.data.error, event.threadID, event.messageID);
	return api.sendMessage(response.data.answer, event.threadID, event.messageID);
};


async function getAnswer(ask) {
	const response = await axios({
		url: 'https://API-ThanhAli.thanhali.repl.co/sim',
		params: {
			type: 'ask',
			apikey: 'ThanhAliVip_1234567890',
			ask
		}
	});
	return response;
}